{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { takeLatest, fork, all } from \"redux-saga/effects\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(userSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/iuihyeon/Desktop/academy/academy-project/academy-next/sagas/index.js"],"names":["rootSaga","takeLatest","fork","all","userSaga"],"mappings":";;oDAEyBA,Q;;AAFzB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,eAAe,SAAUH,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMG,GAAG,CAAC,CAACD,IAAI,CAACE,QAAD,CAAL,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLatest, fork, all } from \"redux-saga/effects\";\n\nexport default function* rootSaga() {\n    yield all([fork(userSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}