{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport createSagaMiddleware from \"@redux-saga/core\";\n\nvar configureStore = function configureStore() {\n  var saga = createSagaMiddleware();\n  var middleware = [saga];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middleware)) : composeWithDevTools(applyMiddleware.apply(void 0, middleware));\n  var store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/iuihyeon/Desktop/academy/academy-project/academy-next/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","rootReducer","rootSaga","createSagaMiddleware","configureStore","saga","middleware","enhancer","store","sagaTask","sagaMiddleware","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,IAAI,GAAGF,oBAAoB,EAAjC;AACA,MAAMG,UAAU,GAAG,CAACD,IAAD,CAAnB;AAEA,MAAME,QAAQ,GACV,QACMR,OAAO,CAACD,eAAe,MAAf,SAAmBQ,UAAnB,CAAD,CADb,GAEMN,mBAAmB,CAACF,eAAe,MAAf,SAAmBQ,UAAnB,CAAD,CAH7B;AAIA,MAAME,KAAK,GAAGX,WAAW,CAACI,WAAD,EAAcM,QAAd,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBC,cAAc,CAACC,GAAf,CAAmBT,QAAnB,CAAjB;AACA,SAAOM,KAAP;AACH,CAXD;;AAaA,IAAMI,OAAO,GAAGhB,aAAa,CAACQ,cAAD,EAAiB;AAC1CS,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport createSagaMiddleware from \"@redux-saga/core\";\n\nconst configureStore = () => {\n    const saga = createSagaMiddleware();\n    const middleware = [saga];\n\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middleware))\n            : composeWithDevTools(applyMiddleware(...middleware));\n    const store = createStore(rootReducer, enhancer);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}