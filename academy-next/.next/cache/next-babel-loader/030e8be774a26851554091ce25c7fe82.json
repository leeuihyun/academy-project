{"ast":null,"code":"import axios from \"axios\";\nimport { takeLatest, all, call, put, delay } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_IN_REQUEST } from \"../../academy-react/src/reducers/auth\";\n\nfunction logInApi() {\n  return axios.post(\"/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    //const res = yield call(logInApi, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn)]);\n}","map":{"version":3,"sources":["/Users/iuihyeon/Desktop/academy/academy-project/academy-next/sagas/user.js"],"names":["axios","takeLatest","all","call","put","delay","LOG_IN_FAILURE","LOG_IN_SUCCESS","LOG_IN_REQUEST","logInApi","post","logIn","action","type","data","error","console","response","watchLogIn","userSaga","fork"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,QAIO,uCAJP;;AAMA,SAASC,QAAT,GAAoB;AAChB,SAAOT,KAAK,CAACU,IAAN,CAAW,QAAX,CAAP;AACH;;AACD,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA;AACA,UAAMP,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEN,cADA;AAENO,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMX,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEP,cADA;AAENQ,MAAAA,IAAI,EAAEC,KAAK,CAACE,QAAN,CAAeH;AAFf,KAAD,CAAT;AAIH;AACJ;;AACD,UAAUI,UAAV,GAAuB;AACnB,QAAMjB,UAAU,CAACO,cAAD,EAAiBG,KAAjB,CAAhB;AACH;;AACD,eAAe,UAAUQ,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CAACkB,IAAI,CAACF,UAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import axios from \"axios\";\nimport { takeLatest, all, call, put, delay } from \"redux-saga/effects\";\nimport {\n    LOG_IN_FAILURE,\n    LOG_IN_SUCCESS,\n    LOG_IN_REQUEST,\n} from \"../../academy-react/src/reducers/auth\";\n\nfunction logInApi() {\n    return axios.post(\"/login\");\n}\nfunction* logIn(action) {\n    try {\n        //const res = yield call(logInApi, action.data);\n        yield delay(1000);\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: action.data,\n        });\n    } catch (error) {\n        console.error(error);\n        yield put({\n            type: LOG_IN_FAILURE,\n            data: error.response.data,\n        });\n    }\n}\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nexport default function* userSaga() {\n    yield all([fork(watchLogIn)]);\n}\n"]},"metadata":{},"sourceType":"module"}