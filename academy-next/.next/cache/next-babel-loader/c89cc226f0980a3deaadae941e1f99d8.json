{"ast":null,"code":"import { handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport shortId from \"shortid\";\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nconst initialState = {\n  user: null,\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null\n};\n\nconst dummyUser = data => ({\n  email: data.user.email,\n  studentList: [{\n    id: shortId.generate(),\n    name: \"firstStudent\",\n    content: \"first student\"\n  }, {\n    id: shortId.generate(),\n    name: \"secondStudent\",\n    content: \"second student\"\n  }]\n});\n\nconst user = handleActions({\n  [LOG_IN_REQUEST]: (state, action) => produce(state, draft => {\n    draft.logInLoading = true;\n    draft.logInDone = false;\n    draft.loadInError = null;\n  }),\n  [LOG_IN_SUCCESS]: (state, action) => produce(state, draft => {\n    draft.user = dummyUser(action.data);\n    draft.logInLoading = false;\n    draft.logInDone = true;\n  }),\n  [LOG_IN_FAILURE]: (state, action) => produce(state, draft => {\n    draft.logInLoading = false;\n    draft.logInError = action.data.error;\n  })\n}, initialState);\nexport default user;","map":{"version":3,"sources":["/Users/iuihyeon/Desktop/academy/academy-project/academy-next/reducers/user.js"],"names":["handleActions","produce","shortId","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","initialState","user","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","dummyUser","data","email","studentList","id","generate","name","content","state","action","draft","loadInError","error"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,YAAY,EAAE,KAFG;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,UAAU,EAAE,IAJK;AAKjBC,EAAAA,aAAa,EAAE,KALE;AAMjBC,EAAAA,UAAU,EAAE,KANK;AAOjBC,EAAAA,WAAW,EAAE,IAPI;AAQjBC,EAAAA,aAAa,EAAE,KARE;AASjBC,EAAAA,UAAU,EAAE,KATK;AAUjBC,EAAAA,WAAW,EAAE;AAVI,CAArB;;AAaA,MAAMC,SAAS,GAAIC,IAAD,KAAW;AACzBC,EAAAA,KAAK,EAAED,IAAI,CAACX,IAAL,CAAUY,KADQ;AAEzBC,EAAAA,WAAW,EAAE,CACT;AACIC,IAAAA,EAAE,EAAEzB,OAAO,CAAC0B,QAAR,EADR;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIC,IAAAA,OAAO,EAAE;AAHb,GADS,EAMT;AACIH,IAAAA,EAAE,EAAEzB,OAAO,CAAC0B,QAAR,EADR;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,OAAO,EAAE;AAHb,GANS;AAFY,CAAX,CAAlB;;AAgBA,MAAMjB,IAAI,GAAGb,aAAa,CACtB;AACI,GAACG,cAAD,GAAkB,CAAC4B,KAAD,EAAQC,MAAR,KACd/B,OAAO,CAAC8B,KAAD,EAASE,KAAD,IAAW;AACtBA,IAAAA,KAAK,CAACnB,YAAN,GAAqB,IAArB;AACAmB,IAAAA,KAAK,CAAClB,SAAN,GAAkB,KAAlB;AACAkB,IAAAA,KAAK,CAACC,WAAN,GAAoB,IAApB;AACH,GAJM,CAFf;AAOI,GAAC9B,cAAD,GAAkB,CAAC2B,KAAD,EAAQC,MAAR,KACd/B,OAAO,CAAC8B,KAAD,EAASE,KAAD,IAAW;AACtBA,IAAAA,KAAK,CAACpB,IAAN,GAAaU,SAAS,CAACS,MAAM,CAACR,IAAR,CAAtB;AACAS,IAAAA,KAAK,CAACnB,YAAN,GAAqB,KAArB;AACAmB,IAAAA,KAAK,CAAClB,SAAN,GAAkB,IAAlB;AACH,GAJM,CARf;AAaI,GAACV,cAAD,GAAkB,CAAC0B,KAAD,EAAQC,MAAR,KACd/B,OAAO,CAAC8B,KAAD,EAASE,KAAD,IAAW;AACtBA,IAAAA,KAAK,CAACnB,YAAN,GAAqB,KAArB;AACAmB,IAAAA,KAAK,CAACjB,UAAN,GAAmBgB,MAAM,CAACR,IAAP,CAAYW,KAA/B;AACH,GAHM;AAdf,CADsB,EAoBtBvB,YApBsB,CAA1B;AAuBA,eAAeC,IAAf","sourcesContent":["import { handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport shortId from \"shortid\";\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nconst initialState = {\n    user: null,\n    logInLoading: false,\n    logInDone: false,\n    logInError: null,\n    logOutLoading: false,\n    logOutDone: false,\n    logOutError: null,\n    signUpLoading: false,\n    signUpDone: false,\n    signUpError: null,\n};\n\nconst dummyUser = (data) => ({\n    email: data.user.email,\n    studentList: [\n        {\n            id: shortId.generate(),\n            name: \"firstStudent\",\n            content: \"first student\",\n        },\n        {\n            id: shortId.generate(),\n            name: \"secondStudent\",\n            content: \"second student\",\n        },\n    ],\n});\n\nconst user = handleActions(\n    {\n        [LOG_IN_REQUEST]: (state, action) =>\n            produce(state, (draft) => {\n                draft.logInLoading = true;\n                draft.logInDone = false;\n                draft.loadInError = null;\n            }),\n        [LOG_IN_SUCCESS]: (state, action) =>\n            produce(state, (draft) => {\n                draft.user = dummyUser(action.data);\n                draft.logInLoading = false;\n                draft.logInDone = true;\n            }),\n        [LOG_IN_FAILURE]: (state, action) =>\n            produce(state, (draft) => {\n                draft.logInLoading = false;\n                draft.logInError = action.data.error;\n            }),\n    },\n    initialState\n);\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}